/*
 * Copyright (c) 2018 Isaac van Bakel
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

whitespace = ' ' / '\t'

non_whitespace = !whitespace .

_ = whitespace+

name = ((!link_end non_whitespace)+) ++ _

link_start = "@{"
link_end = "}"

text -> (LinkPart, &'input str)
  = text:$((!link_start .)+) { (LinkPart::Text, text) }

link -> (LinkPart, &'input str)
  = link_start _? name:$(name) _? link_end { (LinkPart::Link, name) }

pub link_line -> LinkedLine<'input>
  = parts:((text / link) *) { 
      let (parts, slices) = parts
        .into_iter()
        .fold((vec![], vec![]), 
        |(mut ps, mut ns), (part, name)| { 
            ps.push(part);
            ns.push(name);
            (ps, ns)
        });
      
      LinkedLine {
          parts: parts,
          slices: slices,
          text: "",
      }
    }
